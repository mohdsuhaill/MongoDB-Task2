1. Find all the topics and tasks which are thought in the month of October
Query:

db.topics.aggregate([
  {
$lookup:{
from: 'tasks',
localField: 'topic_name',
foreignField: 'task_name',
as: 'topics and tasks'
}
},
  {
$match:{
date:{$regex:'1-10-2020'}
}
},
  {
$unwind: '$topics and tasks'
},
  {
$project:{
_id:0,
date:1,
task: '$topics and tasks.task_name',
userid: '$topics and tasks.user_id',
submitted: '$topics and tasks.submitted'
}
}
]).toArray();

output:

[
  { date: '01-10-2020', task: 'html&css', userid: 1, submitted: 'true' },
  { date: '02-10-2020', task: 'mongoDB', userid: 2, submitted: 'true' },
  { date: '15-10-2020', task: 'Redux', userid: 3, submitted: 'false' },
  { date: '01-10-2020', task: 'mongoDB', userid: 4, submitted: 'true' },
  { date: '31-10-2020', task: 'Redux', userid: 5, submitted: 'false' },
  { date: '01-10-2020', task: 'mongoDB', userid: 6, submitted: 'true' },
]

2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

Query:

db.company_drives.find({
drive_date:{
$gte: "2020-10-15",
$lte: "2020-10-31"
}
})

Output:

[
    {
  _id: ObjectId('668e71cd312f105b5b4cb7c5'),
  user_id: ObjectId('668e453f312f105b5b4cb7a1'),
  company_name: 'zoho',
  drive_date: '16-10-2020'
},
{
  _id: ObjectId('668e71cd312f105b5b4cb7c6'),
  user_id: ObjectId('668e453f312f105b5b4cb7a2'),
  company_name: 'google',
  drive_date: '18-10-2020'
},
{
  _id: ObjectId('668e71cd312f105b5b4cb7c7'),
  user_id: ObjectId('668e453f312f105b5b4cb7a3'),
  company_name: 'HCL',
  drive_date: '10-10-2020'
},
{
  _id: ObjectId('668e71cd312f105b5b4cb7c8'),
  user_id: ObjectId('668e453f312f105b5b4cb7a4'),
  company_name: 'Wipro',
  drive_date: '21-10-2020'
},
{
  _id: ObjectId('668e71cd312f105b5b4cb7c9'),
  user_id: ObjectId('668e453f312f105b5b4cb7a5'),
  company_name: 'infosys',
  drive_date: '26-10-2020'
},
{
  _id: ObjectId('668e71cd312f105b5b4cb7ca'),
  user_id: ObjectId('668e453f312f105b5b4cb7a6'),
  company_name: 'IBM',
  drive_date: '30-10-2020'
}
]

3. Find all the company drives and students who are appeared for the placement.

Query:
    db.company_drives.aggregate([
  {
$lookup:{
from: 'users',
localField: 'user_id',
foreignField: '_id',
as: 'user and company drives'
}
},
  {
$unwind: '$user and company drives'
},
  {
$project:{
_id:0,
drive_Date:1,
company_name:1,
userid: '$user and company drives.user_id',
name: '$user and company drives.name',
email:'$user and company drives.email'
}
}
]).toArray();

Output:
[
      {
    company_name: 'google',
    userid: 2,
    name: 'jam',
    email: 'jam@gmail.com'
  },
  {
    company_name: 'HCL',
    userid: 1,
    name: 'adam',
    email: 'adam@gmail.com'
  },
  {
    company_name: 'infosys',
    userid: 5,
    name: 'suresh',
    email: 'suresh@gmail.com'
  },
    {
    company_name: 'IBM',
    userid: 4,
    name: 'smith',
    email: 'smith@gmail.com'
  },
  {
    company_name: 'Wipro',
    userid: 3,
    name: 'jim',
    email: 'jim@gmail.com'
  },
  {
    company_name: 'zoho',
    userid: 6,
    name: 'kishor',
    email: 'kishor@gmail.com'
  },
]

4. Find the number of problems solved by the user in codekata

Query:

  db.codekata.aggregate([
  {
$lookup:{
from:'users',
localField:'user_id',
foreignField:'_id',
as:'problemsolved'
}
},
  {
$unwind: '$problemsolved'
},
  {
$project:{
_id:0,
userid:'$problemsolved.user_id',
name:'$problemsolved.name',
email:'$problemsolved.email',
problems_Solved:1
}
}
]).toArray()

output:
[
   {
    problems_Solved: 30,
    userid: 1,
    name: 'adam',
    email: 'adam@gmail.com'
  },
  {
    problems_Solved: 20,
    userid: 2,
    name: 'jam',
    email: 'jam@gmail.com'
  },
  {
    problems_Solved: 40,
    userid: 3,
    name: 'jim',
    email: 'jim@gmail.com'
  },
  {
    problems_Solved: 15,
    userid: 4,
    name: 'smith',
    email: 'smith@gmail.com'
  },
  {
    problems_Solved: 25,
    userid: 5,
    name: 'suresh',
    email: 'suresh@gmail.com'
  },
  {
    problems_Solved: 20,
    userid: 6,
    name: 'kishor',
    email: 'kishor@gmail.com'
  }
]

5. Find all the mentors with who has the mentee's count more than 15

Query:
  db.mentors.aggregate([
  {
$lookup:{
from:'users',
localField:'mentor_id',
foreignField:'mentor_id',
as:'menteecount'
}
},
  {
$project:{count:{$size:'$menteecount'},
_id:0,
mentor_name:1,
mentor_id:1
}
},
  {
$match:{count:{$gt:2}}
}
])

Output:

{
  mentor_name: 'Rupan',
  mentor_id: 1,
  count:3
}


6. Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

Query: 
  db.attendance.aggregate([
  {
$lookup:{
from:'topics',
localField:'topic_id',
foreignField:'topic_id',
as:'attendance'
}
},
  {
$lookup:{
from:'tasks',
localField:'user_id',
foreignField:'user_id',
as:'task-notcompleted'
}
},
  {
$unwind:'$attendance'
},
  {
$unwind:'$task-notcompleted'
},
  {
$match:{
attended:'false',
'attendance.date':{$gte:'2020-10-15',$lte:'2020-10-31'}
}
},
  {
$match:{
'task-notcompleted.task_date':{
$gte:'2020-10-15',$lte:'2020-10-31'
},
'task-notcompleted.submitted':'false'
}
},
  {
$project:{
_id:0,
'attendance._id':0,
'task-notcompleted._id':0
}
}
]).toArray()